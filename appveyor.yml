platform:
- x86
- x64

image:
- Visual Studio 2015

environment:
  #APPVEYOR_RDP_PASSWORD: 7A4hcPlOZ2UhEiUk5cVx
  PYCODESTYLE_CMD: python -m pycodestyle --exclude=.git,build
  matrix:
    # For Python versions available on Appveyor, see
    # http://www.appveyor.com/docs/installed-software#python
    - PYTHON_MAJOR: 2
      PYTHON_MINOR: 7
    - PYTHON_MAJOR: 3
      PYTHON_MINOR: 5
    - PYTHON_MAJOR: 3
      PYTHON_MINOR: 6
    - PYTHON_MAJOR: 3
      PYTHON_MINOR: 7

install:
  # Prepare environment
  - set PYTHON_PATH=C:\Python%PYTHON_MAJOR%%PYTHON_MINOR%
  - if "%PLATFORM%"=="x64" set PYTHON_PATH=%PYTHON_PATH%-x64
  - echo %PYTHON_PATH%
  - set PATH=%PYTHON_PATH%;%PYTHON_PATH%\Scripts;%PATH%

  # Check that we have the expected version and architecture for Python
  - python --version

  # Install setuptools/wheel so that we can e.g. use bdist_wheel
  - pip install --upgrade setuptools wheel
  - pip install --upgrade pycodestyle

  ## Use Chocolatey to install SWIG.
  #- set SWIG=C:\ProgramData\chocolatey\bin\swig.exe
  #- if not exist %SWIG% choco install swig --version 3.0.9 --yes --limit-output

init:
  # Following the matrix here: https://wiki.python.org/moin/WindowsCompilers#Which_Microsoft_Visual_C.2B-.2B-_compiler_to_use_with_a_specific_Python_version_.3F
  - if "%PLATFORM%"=="x86" set VC_ARCH=x86
  - if "%PLATFORM%"=="x64" set VC_ARCH=amd64
  - if "%PYTHON_MAJOR%"=="3" if "%PYTHON_MINOR%"=="7" set VC_VERSION=14.0
  - if "%PYTHON_MAJOR%"=="3" if "%PYTHON_MINOR%"=="6" set VC_VERSION=14.0
  - if "%PYTHON_MAJOR%"=="3" if "%PYTHON_MINOR%"=="5" set VC_VERSION=14.0
  - if "%PYTHON_MAJOR%"=="3" if "%PYTHON_MINOR%"=="4" set VC_VERSION=10.0
  - if "%PYTHON_MAJOR%"=="3" if "%PYTHON_MINOR%"=="3" set VC_VERSION=10.0
  - if "%PYTHON_MAJOR%"=="2" if "%PYTHON_MINOR%"=="7" set VC_VERSION=9.0
  - call "C:\Program Files (x86)\Microsoft Visual Studio %VC_VERSION%\VC\vcvarsall.bat" %VC_ARCH%

  # RDP session for debugging
  #- ps: iex ((new-object net.webclient).DownloadString('https://raw.githubusercontent.com/appveyor/ci/master/scripts/enable-rdp.ps1'))

build_script:
  - python setup.py build

test_script:
  - python -m pycodestyle --exclude=.git,build --show-source --show-pep8 . || python -m pycodestyle --exclude=.git,build --statistics -qq . || exit 0

after_test:
  # This step builds your wheels.
  # Again, you only need build.cmd if you're building C extensions for
  # 64-bit Python 3.3/3.4. And you need to use %PYTHON% to get the correct
  # interpreter
  - if "%PYTHON_MAJOR%"=="2" if "%PYTHON_MINOR%"=="7" python setup.py sdist
  - python setup.py bdist_wheel --skip-build
  - python setup.py bdist_wininst --skip-build --target-version=%PYTHON_MAJOR%.%PYTHON_MINOR%

#artifacts:
  # bdist_wheel puts your built wheel in the dist directory
  #- path: dist\*

#on_success:
#  You can use this step to upload your artifacts to a public website.
#  See Appveyor's documentation for more details. Or you can simply
#  access your wheels from the Appveyor "artifacts" tab for your build.

#on_finish:
  # RDP session for debugging
  #- ps: $blockRdp = $true; iex ((new-object net.webclient).DownloadString('https://raw.githubusercontent.com/appveyor/ci/master/scripts/enable-rdp.ps1'))
