image:
- Visual Studio 2017

environment:
  matrix:
    # For Python versions available on Appveyor, see
    # http://www.appveyor.com/docs/installed-software#python
    - PYTHON: "C:\\Python27"
      WIN_ARCH: "x86"
      SETUP_PY: "setup.py"
    - PYTHON: "C:\\Python27-x64"
      WIN_ARCH: "amd64"
      SETUP_PY: "setup.py"
    - PYTHON: "C:\\Python33"
      WIN_ARCH: "x86"
      SETUP_PY: "setup3.py"
    - PYTHON: "C:\\Python33-x64"
      WIN_ARCH: "amd64"
      SETUP_PY: "setup3.py"
    - PYTHON: "C:\\Python34"
      WIN_ARCH: "x86"
      SETUP_PY: "setup3.py"
    - PYTHON: "C:\\Python34-x64"
      WIN_ARCH: "amd64"
      SETUP_PY: "setup3.py"
    - PYTHON: "C:\\Python35"
      WIN_ARCH: "x86"
      SETUP_PY: "setup3.py"
    - PYTHON: "C:\\Python35-x64"
      WIN_ARCH: "amd64"
      SETUP_PY: "setup3.py"
    - PYTHON: "C:\\Python36"
      WIN_ARCH: "x86"
      SETUP_PY: "setup3.py"
    - PYTHON: "C:\\Python36-x64"
      WIN_ARCH: "amd64"
      SETUP_PY: "setup3.py"

install:
  # Prepare environment
  - "SET PATH=%PYTHON%;%PYTHON%\\Scripts;%PATH%"

  # Check that we have the expected version and architecture for Python
  - "%PYTHON%\\python.exe --version"

  # Install setuptools/wheel so that we can e.g. use bdist_wheel
  - "pip install setuptools wheel"

build_script:
  - "CALL \"C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\VC\\vcvarsall.bat\" %WIN_ARCH%"
  - "%PYTHON%\\python.exe %SETUP_PY% build"

test_script:
  # Put your test command here.
  # If you don't need to build C extensions on 64-bit Python 3.3 or 3.4,
  # you can remove "build.cmd" from the front of the command, as it's
  # only needed to support those cases.
  # Note that you must use the environment variable %PYTHON% to refer to
  # the interpreter you're using - Appveyor does not do anything special
  # to put the Python version you want to use on PATH.
  - "%PYTHON%\\python.exe pywin32_testall.py"

after_test:
  # This step builds your wheels.
  # Again, you only need build.cmd if you're building C extensions for
  # 64-bit Python 3.3/3.4. And you need to use %PYTHON% to get the correct
  # interpreter
  - "CALL \"C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\VC\\vcvarsall.bat\" %WIN_ARCH%"
  - "%PYTHON%\\python.exe %SETUP_PY% bdist_wheel"

artifacts:
  # bdist_wheel puts your built wheel in the dist directory
  - path: dist\*

#on_success:
#  You can use this step to upload your artifacts to a public website.
#  See Appveyor's documentation for more details. Or you can simply
#  access your wheels from the Appveyor "artifacts" tab for your build.
